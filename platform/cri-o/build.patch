diff --git a/BUILD.bazel b/BUILD.bazel
new file mode 100644
index 000000000..a79f430ae
--- /dev/null
+++ b/BUILD.bazel
@@ -0,0 +1,15 @@
+exports_files([
+    "seccomp.json",
+    "crio-umount.conf",
+    "crictl.yaml",
+    "contrib/systemd/crio.service",
+    "contrib/systemd/crio-shutdown.service",
+])
+
+genrule(
+    name = "crio.conf-genrule",
+    outs = [":crio.conf"],
+    tools = ["//cmd/crio"],
+    cmd = "\"$(location //cmd/crio)\" --root=\"/nonexistent\" --runroot \"/nonexistent\" --storage-driver=\"\" --config=\"\" config >\"$@\"",
+    visibility = ["//visibility:public"],
+)
diff --git a/vendor/github.com/containers/storage/pkg/devicemapper/BUILD.bazel b/vendor/github.com/containers/storage/pkg/devicemapper/BUILD.bazel
index c8f3bf6be..495ea30a4 100644
--- a/vendor/github.com/containers/storage/pkg/devicemapper/BUILD.bazel
+++ b/vendor/github.com/containers/storage/pkg/devicemapper/BUILD.bazel
@@ -12,6 +12,7 @@ go_library(
         "log.go",
     ],
     cgo = True,
+    clinkopts = ["-ldevmapper"],
     importmap = "github.com/cri-o/cri-o/vendor/github.com/containers/storage/pkg/devicemapper",
     importpath = "github.com/containers/storage/pkg/devicemapper",
     visibility = ["//visibility:public"],
diff --git a/vendor/github.com/seccomp/libseccomp-golang/BUILD.bazel b/vendor/github.com/seccomp/libseccomp-golang/BUILD.bazel
index 6cd7977bd..c51281f0d 100644
--- a/vendor/github.com/seccomp/libseccomp-golang/BUILD.bazel
+++ b/vendor/github.com/seccomp/libseccomp-golang/BUILD.bazel
@@ -7,6 +7,7 @@ go_library(
         "seccomp_internal.go",
     ],
     cgo = True,
+    clinkopts = ["-lseccomp"],
     importmap = "github.com/cri-o/cri-o/vendor/github.com/seccomp/libseccomp-golang",
     importpath = "github.com/seccomp/libseccomp-golang",
     visibility = ["//visibility:public"],
diff --git a/vendor/golang.org/x/crypto/ed25519/BUILD.bazel b/vendor/golang.org/x/crypto/ed25519/BUILD.bazel
index 36055b042..1e3c1c9a5 100644
--- a/vendor/golang.org/x/crypto/ed25519/BUILD.bazel
+++ b/vendor/golang.org/x/crypto/ed25519/BUILD.bazel
@@ -2,10 +2,7 @@ load("@io_bazel_rules_go//go:def.bzl", "go_library")
 
 go_library(
     name = "go_default_library",
-    srcs = [
-        "ed25519.go",
-        "ed25519_go113.go",
-    ],
+    srcs = ["ed25519.go"],
     importmap = "github.com/cri-o/cri-o/vendor/golang.org/x/crypto/ed25519",
     importpath = "golang.org/x/crypto/ed25519",
     visibility = ["//visibility:public"],
diff --git a/vendor/k8s.io/apimachinery/pkg/util/sets/BUILD b/vendor/k8s.io/apimachinery/pkg/util/sets/BUILD
index 4d61ac5ba..784db97c9 100644
--- a/vendor/k8s.io/apimachinery/pkg/util/sets/BUILD
+++ b/vendor/k8s.io/apimachinery/pkg/util/sets/BUILD
@@ -1,6 +1,5 @@
 package(default_visibility = ["//visibility:public"])
 
-load("@io_k8s_repo_infra//defs:go.bzl", "go_genrule")
 load(
     "@io_bazel_rules_go//go:def.bzl",
     "go_library",
@@ -21,35 +20,6 @@ go_library(
     importpath = "k8s.io/apimachinery/pkg/util/sets",
 )
 
-# This rule makes all sorts of terrible assumptions that it's running inside k8s.io/kubernetes, even though it's part of k8s.io/apimachinery. :\
-go_genrule(
-    name = "set-gen",
-    srcs = [
-        "//hack/boilerplate:boilerplate.generatego.txt",
-    ],
-    outs = [
-        "byte.go",
-        "doc.go",
-        "empty.go",
-        "int.go",
-        "int64.go",
-        "string.go",
-    ],
-    cmd = """
-$(location //vendor/k8s.io/code-generator/cmd/set-gen) \
-    --input-dirs k8s.io/kubernetes/vendor/k8s.io/apimachinery/pkg/util/sets/types \
-    --output-base $$(dirname $$(dirname $(location :byte.go))) \
-    --go-header-file $(location //hack/boilerplate:boilerplate.generatego.txt) \
-    --output-package sets
-    """,
-    go_deps = [
-        "//staging/src/k8s.io/apimachinery/pkg/util/sets/types:go_default_library",
-    ],
-    tools = [
-        "//vendor/k8s.io/code-generator/cmd/set-gen",
-    ],
-)
-
 filegroup(
     name = "package-srcs",
     srcs = glob(["**"]),
diff --git a/vendor/k8s.io/component-base/metrics/BUILD b/vendor/k8s.io/component-base/metrics/BUILD
index 06398d377..9feb27b0c 100644
--- a/vendor/k8s.io/component-base/metrics/BUILD
+++ b/vendor/k8s.io/component-base/metrics/BUILD
@@ -4,7 +4,6 @@ load(
     "@io_bazel_rules_go//go:def.bzl",
     "go_library",
 )
-load("//staging/src/k8s.io/component-base/version:def.bzl", "version_x_defs")
 
 go_library(
     name = "go_default_library",
