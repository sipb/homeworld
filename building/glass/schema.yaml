$schema: "http://json-schema.org/draft-07/schema#"
title: GlassFile
type: object
properties:
  control:
    type: object
    properties:
      name:
        type: string
        pattern: "^[a-z0-9-]+$"
      version:
        type: string
        pattern: "^[a-zA-Z0-9.-]+$"
      date:
        type: string
        pattern: "^[0-9]{4}-[01][0-9]-[0-3][0-9]T[0-2][0-9]:[0-5][0-9]:[0-6][0-9][+-][0-9]{4}$"
      type:
        enum: ["deb", "aci", "tgz", "iso", "folder"]
      set-exec:
        type: string
      set-working-dir:
        type: string
      boot-bin:
        type: string
      boot-cat:
        type: string
      install-scripts:
        type: object
        properties:
          prerm:
            type: string
          postrm:
            type: string
          preinst:
            type: string
          postinst:
            type: string
        additionalProperties: false
      use-tmpfs:
        type: boolean
      depends:
        type: array
        items:
          type: string
      ports:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            port:
              type: integer
            protocol:
              enum: ["tcp", "udp"]
          additionalProperties: false
          required: ["name", "port", "protocol"]
    required: ["name", "type"]
    additionalProperties: false
  build:
    description: The list of steps for a glass project build.
    type: array
    items:
      $ref: "#/definitions/buildStep"
  stages:
    description: The list of stages for a glass multi-project build.
    type: array
    items:
      type: object
      properties:
        pattern:
          type: string
        build:
          type: boolean
      required: ["pattern"]
      additionalProperties: false
required: ["control"]
additionalProperties: false
definitions:
  buildStep:
    type: object
    oneOf:
    # copy block
    - properties:
        type:
          enum: ["copy"]
        # TODO: how to specify "exactly two of these three"
        input:
          type: string
        stage:
          type: string
        output:
          type: string
        recursive:
          type: boolean
      required: ["type"]
      additionalProperties: false
    # upstream-extract block
    - properties:
        type:
          enum: ["upstream-extract"]
        upstream:
          type: string
        version:
          type: string
        focus:
          type: string
          pattern: "^[^/.].*$|^[.].+$"   # must not be empty or ".", or start with a slash
        stage:
          type: string
      required: ["type", "upstream", "version", "stage"]
      additionalProperties: false
    # upstream block
    - properties:
        type:
          enum: ["upstream"]
        upstream:
          type: string
        version:
          type: string
        stage:
          type: string
      required: ["type", "upstream", "version", "stage"]
      additionalProperties: false
    # remove block
    - properties:
        type:
          enum: ["remove"]
        # TODO: how to specify "at least one of these two"
        stage:
          type: string
        output:
          type: string
        recursive:
          type: boolean
      required: ["type", "recursive"]
      additionalProperties: false
    # python/bash block
    - properties:
        type:
          enum: ["python", "bash"]
        code:
          type: string
        # TODO: how to specify "at most two of these three"
        input:
          type: string
        stage:
          type: string
        output:
          type: string
      required: ["type", "code"]
      additionalProperties: false
    # go-build block
    - properties:
        type:
          enum: ["go-build"]
        version:
          type: string
        stage:
          type: string
        sources-input:
          type: array
          items:
            type: string
        packages:
          type: array
          items:
            type: string
        gopath:
          type: string
        # TODO: change this to 'enable-cgo' instead of 'no-cgo' and invert logic
        no-cgo:
          type: boolean
        ldflags:
          type: string
      required: ["type", "version", "stage"]
      additionalProperties: false
    # go-prepare block
    - properties:
        type:
          enum: ["go-prepare"]
        version:
          type: string
        stage:
          type: string
      required: ["type", "version", "stage"]
      additionalProperties: false
    # debootstrap block
    - properties:
        type:
          enum: ["debootstrap"]
        version:
          type: string
        release:
          enum: ["jessie", "stretch", "buster", "sid"]
        stage:
          type: string
        extra:
          type: array
          items:
            type: string
      required: ["type", "release", "version", "stage"]
      additionalProperties: false
    # fakechroot-clean block
    - properties:
        type:
          enum: ["fakechroot-clean"]
        stage:
          type: string
      require: ["type", "stage"]
      additionalProperties: false
    # debremove block
    - properties:
        type:
          enum: ["debremove"]
        packages:
          type: array
          items:
            type: string
        stage:
          type: string
        force-remove-essential:
          type: boolean
        force-depends:
          type: boolean
        no-triggers:
          type: boolean
      required: ["type", "packages", "stage"]
      additionalProperties: false
    # debinstall block
    - properties:
        type:
          enum: ["debinstall"]
        packages:
          type: array
          items:
            type: string
        local-packages:
          type: array
          items:
            type: string
        stage:
          type: string
      required: ["type", "stage"]
      additionalProperties: false
    # debclean
    - properties:
        type:
          enum: ["debclean"]
        options:
          type: array
          items:
            type: string
        stage:
          type: string
      required: ["type", "options", "stage"]
      additionalProperties: false
    # mkdir
    - properties:
        type:
          enum: ["mkdir"]
        stage:
          type: string
        output:
          type: string
        recursive:
          type: boolean
      required: ["type"]
      additionalProperties: false
    # debug-shell
    - properties:
        type:
          enum: ["debug-shell"]
      required: ["type"]
      additionalProperties: false
    # aci-unpack
    - properties:
        type:
          enum: ["aci-unpack"]
        name:
          type: string
        version:
          type: string
        stage:
          type: string
        output:
          type: string
      required: ["type", "name", "version"]
      additionalProperties: false
    # acbuild
    - properties:
        type:
          enum: ["acbuild"]
        name:
          type: string
        stage:
          type: string
        exec:
          type: string
        copy:
          type: array
          items:
            type: object
            properties:
              output:
                type: string
              input:
                type: string
              stage:
                type: string
            required: ["output"]
            additionalProperties: false
        env:
          type: object
          patternProperties:
            "^.+$":
              type: string
          additionalProperties: false
        mounts:
          type: object
          patternProperties:
            "^.+$":
              type: string
          additionalProperties: false
        labels:
          type: object
          patternProperties:
            "^.+$":
              type: string
          additionalProperties: false
        ports:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              protocol:
                enum: ["tcp", "udp"]
              port:
                type: integer
            required: ["name", "protocol", "port"]
            additionalProperties: false
      required: ["type", "name", "stage"]
      additionalProperties: false
